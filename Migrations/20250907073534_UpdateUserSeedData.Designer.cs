// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blazor_arsip.Data;

#nullable disable

namespace blazor_arsip.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250907073534_UpdateUserSeedData")]
    partial class UpdateUserSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("blazor_arsip.Models.FileActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("FileRecordId")
                        .HasColumnType("int");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("PerformedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityType");

                    b.HasIndex("FileRecordId");

                    b.HasIndex("PerformedAt");

                    b.ToTable("FileActivities");
                });

            modelBuilder.Entity("blazor_arsip.Models.FileCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasDefaultValue("#007bff");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FileCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorCode = "#007bff",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(5938),
                            CreatedBy = "System",
                            Description = "General documents and text files",
                            IsActive = true,
                            Name = "Documents"
                        },
                        new
                        {
                            Id = 2,
                            ColorCode = "#28a745",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(7334),
                            CreatedBy = "System",
                            Description = "Image files and graphics",
                            IsActive = true,
                            Name = "Images"
                        },
                        new
                        {
                            Id = 3,
                            ColorCode = "#dc3545",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(7336),
                            CreatedBy = "System",
                            Description = "Video files and multimedia",
                            IsActive = true,
                            Name = "Videos"
                        },
                        new
                        {
                            Id = 4,
                            ColorCode = "#ffc107",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(7337),
                            CreatedBy = "System",
                            Description = "Audio files and music",
                            IsActive = true,
                            Name = "Audio"
                        },
                        new
                        {
                            Id = 5,
                            ColorCode = "#6f42c1",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(7338),
                            CreatedBy = "System",
                            Description = "Compressed files and archives",
                            IsActive = true,
                            Name = "Archives"
                        },
                        new
                        {
                            Id = 6,
                            ColorCode = "#20c997",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(7339),
                            CreatedBy = "System",
                            Description = "Excel and spreadsheet files",
                            IsActive = true,
                            Name = "Spreadsheets"
                        },
                        new
                        {
                            Id = 7,
                            ColorCode = "#fd7e14",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(7340),
                            CreatedBy = "System",
                            Description = "PowerPoint and presentation files",
                            IsActive = true,
                            Name = "Presentations"
                        },
                        new
                        {
                            Id = 8,
                            ColorCode = "#6c757d",
                            CreatedAt = new DateTime(2025, 9, 7, 7, 35, 33, 355, DateTimeKind.Utc).AddTicks(7341),
                            CreatedBy = "System",
                            Description = "Other file types",
                            IsActive = true,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("blazor_arsip.Models.FileRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("General");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FileHash")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("FileName");

                    b.HasIndex("IsActive");

                    b.HasIndex("UploadedAt");

                    b.ToTable("FileRecords");
                });

            modelBuilder.Entity("blazor_arsip.Models.FileVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangeDescription")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FileHash")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<int>("FileRecordId")
                        .HasColumnType("int");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("VersionFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VersionFilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileRecordId");

                    b.HasIndex("VersionNumber");

                    b.ToTable("FileVersions");
                });

            modelBuilder.Entity("blazor_arsip.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhotoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@company.com",
                            IsActive = true,
                            Name = "Administrator",
                            PasswordHash = "$2a$11$8K1p/a0dRTlNqo/x3/Yd4.WdRuBdHdXRf5mGvFlvzeH4p5rEeIXJG"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "user@company.com",
                            IsActive = true,
                            Name = "Regular User",
                            PasswordHash = "$2a$11$8K1p/a0dRTlNqo/x3/Yd4.WdRuBdHdXRf5mGvFlvzeH4p5rEeIXJG"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "test@company.com",
                            IsActive = true,
                            Name = "Test User",
                            PasswordHash = "$2a$11$8K1p/a0dRTlNqo/x3/Yd4.WdRuBdHdXRf5mGvFlvzeH4p5rEeIXJG"
                        });
                });

            modelBuilder.Entity("blazor_arsip.Models.FileActivity", b =>
                {
                    b.HasOne("blazor_arsip.Models.FileRecord", "FileRecord")
                        .WithMany("Activities")
                        .HasForeignKey("FileRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileRecord");
                });

            modelBuilder.Entity("blazor_arsip.Models.FileVersion", b =>
                {
                    b.HasOne("blazor_arsip.Models.FileRecord", "FileRecord")
                        .WithMany("Versions")
                        .HasForeignKey("FileRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileRecord");
                });

            modelBuilder.Entity("blazor_arsip.Models.FileRecord", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
